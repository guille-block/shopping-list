{"version":3,"sources":["logo.svg","components/header.jsx","components/list.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","activar","cambiar","cambiarCant","valor","cantidades","className","onSubmit","type","minLength","value","onChange","required","List","component","remover","componentCant","sumarCant","restarCant","map","contenido","index","onClick","App","useState","lista","setLista","setCantidades","valorCant","setValCant","setValue","activo","setActivo","useEffect","agregarALista","nuevaLista","nuevasCant","console","log","e","preventDefault","target","numero","i","fakeCantidades","Number","val","fake","fakeCant","indexOf","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.666d3657.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './header.css'\r\n\r\nconst Header = ({activar, cambiar, cambiarCant ,valor, cantidades}) => {\r\n    return (\r\n    <form className = 'form-align' onSubmit = {activar}>\r\n        <span><input  className = 'input-text' type=\"text\" minLength=\"2\" value = {valor} onChange = {cambiar} required></input></span>\r\n        <span>\r\n        <input  className = 'input-number' type=\"number\" value = {cantidades} onChange = {cambiarCant} ></input>\r\n          <button className = 'boton-agregar' type=\"submit\">\r\n          Incorporar\r\n          </button>\r\n          </span>\r\n        </form>)\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './list.css'\r\nimport {IoTrashOutline} from \"react-icons/io5\"\r\n\r\n\r\nconst List = ({component, remover, componentCant, sumarCant, restarCant}) => {\r\n\r\n\r\n    return (\r\n    <div>\r\n        <ol className= 'order-list'>\r\n         {component.map((contenido, index) => {\r\n             return (\r\n        <div className= 'list-horizontal'>\r\n         <li><p className = 'p-color'>{contenido}</p>\r\n         <button className= 'cant-espacios boton-eliminar' onClick ={() => {remover(contenido)}}>  \r\n                Eliminar <IoTrashOutline/>\r\n                </button>\r\n             <div className= 'cantidades'> \r\n                 <button className= 'cant-espacios boton-modificar' onClick={() => {restarCant(index)}}>-</button>\r\n                    <p className= 'cant-espacios vertical'>{componentCant[index]}</p>\r\n                <button className= 'cant-espacios boton-modificar' onClick={() => {sumarCant(index)}}>+</button>\r\n             </div>\r\n            </li>\r\n            </div>\r\n        )})} \r\n        </ol>\r\n    </div>)\r\n}\r\n\r\nexport default List","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './components/header'\r\nimport List from './components/list';\r\nimport {useState, useEffect} from 'react'\r\n\r\nfunction App() {\r\n\r\n  const [lista, setLista] = useState([])\r\n  const [cantidades, setCantidades] = useState([])\r\n  const [valorCant, setValCant] = useState(1)\r\n  const [value, setValue] = useState('')\r\n  const [activo, setActivo] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if(activo) {\r\n    agregarALista()\r\n    }\r\n    setActivo(false)\r\n  }, [activo])\r\n\r\n  \r\n  const agregarALista = () => {\r\n    const nuevaLista = [...lista, value]\r\n    setLista(nuevaLista)\r\n    setValue('')\r\n    const nuevasCant = [...cantidades, valorCant]\r\n    setCantidades(nuevasCant)\r\n    setValCant(1)\r\n    console.log(cantidades)\r\n    console.log(valorCant)\r\n  }\r\n\r\n\r\n const removerDeLista = val => {\r\n   const fake = [...lista]\r\n   const fakeCant = [...cantidades]\r\n  const index = fake.indexOf(val);\r\n  if (index > -1) {\r\n    fake.splice(index, 1);\r\n    fakeCant.splice(index, 1)\r\n  }\r\n  setLista(fake)\r\n  setCantidades(fakeCant)\r\n }\r\n\r\n\r\n  const cambiarValue = e => {\r\n    e.preventDefault()\r\n    setValue(e.target.value)\r\n    \r\n  }\r\n\r\n  const cambiarCant = e => {\r\n    e.preventDefault()\r\n    const numero = e.target.value\r\n    console.log(typeof numero)\r\n    setValCant(e.target.value)  \r\n\r\n  }\r\n\r\n  const sumarCantidad = i => {\r\n    const fakeCantidades = [...cantidades]\r\n    fakeCantidades[i] = Number(fakeCantidades[i]) + 1\r\n    setCantidades(fakeCantidades)\r\n  }\r\n\r\n  const restarCantidad = i => {\r\n    const fakeCantidades = [...cantidades]\r\n    fakeCantidades[i] = (Number(fakeCantidades[i])<1) ? 0 : Number(fakeCantidades[i])-1 \r\n    setCantidades(fakeCantidades)\r\n  }\r\n\r\n  const Activar = e => {\r\n    e.preventDefault()\r\n    setActivo(true)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>El super de las Heras</h1>\r\n      <Header \r\n        activar = {Activar}\r\n        cambiar = {cambiarValue}\r\n        cambiarCant = {cambiarCant}\r\n        cantidades = {valorCant}\r\n        valor = {value}/>\r\n      <List \r\n        component= {lista}\r\n        sumarCant = {sumarCantidad}\r\n        restarCant = {restarCantidad}\r\n        componentCant= {cantidades}\r\n        remover = {removerDeLista}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}